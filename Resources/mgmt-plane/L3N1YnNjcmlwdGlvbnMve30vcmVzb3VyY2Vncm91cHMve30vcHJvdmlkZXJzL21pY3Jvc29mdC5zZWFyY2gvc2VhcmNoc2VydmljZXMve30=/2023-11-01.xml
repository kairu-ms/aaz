<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2023-11-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
  <commandGroup name="search service">
    <command name="show" version="2023-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2023-11-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="uuid" var="$Header.x-ms-client-request-id" options="x-ms-client-request-id" hide="True" group="">
          <help short="A client-generated GUID value that identifies this request. If specified, this will be included in response information as a way to track the request."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.searchServiceName" options="search-service-name name n" required="True" idPart="name">
          <help short="The name of the Azure Cognitive Search service associated with the specified resource group."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Services_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="searchServiceName" arg="$Path.searchServiceName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id">
              <param type="uuid" name="x-ms-client-request-id" arg="$Header.x-ms-client-request-id"/>
            </header>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="authOptions">
                      <prop type="object" name="aadOrApiKey">
                        <prop type="string" name="aadAuthFailureMode">
                          <enum>
                            <item value="&quot;http401WithBearerChallenge&quot;"/>
                            <item value="&quot;http403&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="apiKeyOnly"/>
                    </prop>
                    <prop nullable="True" type="boolean" name="disableLocalAuth"/>
                    <prop type="object" name="encryptionWithCmk">
                      <prop readOnly="True" type="string" name="encryptionComplianceStatus">
                        <enum>
                          <item value="&quot;Compliant&quot;"/>
                          <item value="&quot;NonCompliant&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enforcement">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Unspecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="hostingMode">
                      <default value="&quot;default&quot;"/>
                      <enum>
                        <item value="&quot;default&quot;"/>
                        <item value="&quot;highDensity&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="array<object>" name="ipRules">
                        <item type="object">
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer32" name="partitionCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired">
                              <default value="&quot;None&quot;"/>
                            </prop>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="replicaCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop nullable="True" type="string" name="semanticSearch">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="sharedPrivateLinkResources">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/sharedPrivateLinkResources/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="string" name="privateLinkResourceId"/>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="requestMessage"/>
                          <prop type="string" name="resourceRegion"/>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Approved&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Rejected&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;degraded&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;error&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;running&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="statusDetails"/>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                        <item value="&quot;standard2&quot;"/>
                        <item value="&quot;standard3&quot;"/>
                        <item value="&quot;storage_optimized_l1&quot;"/>
                        <item value="&quot;storage_optimized_l2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-11-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2023-11-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="uuid" var="$Header.x-ms-client-request-id" options="x-ms-client-request-id" hide="True" group="">
          <help short="A client-generated GUID value that identifies this request. If specified, this will be included in response information as a way to track the request."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.searchServiceName" options="search-service-name name n" required="True" idPart="name">
          <help short="The name of the Azure Cognitive Search service associated with the specified resource group."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Services_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="searchServiceName" arg="$Path.searchServiceName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id">
              <param type="uuid" name="x-ms-client-request-id" arg="$Header.x-ms-client-request-id"/>
            </header>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2023-11-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="uuid" var="$Header.x-ms-client-request-id" options="x-ms-client-request-id" hide="True" group="">
          <help short="A client-generated GUID value that identifies this request. If specified, this will be included in response information as a way to track the request."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.searchServiceName" options="search-service-name name n" required="True" idPart="name">
          <help short="The name of the Azure Cognitive Search service to create or update. Search service names must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60 characters in length. Search service names must be globally unique since they are part of the service URI (https://<name>.search.windows.net). You cannot change the service name after the service is created."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AuthOptions">
        <arg type="string" var="$service.properties.authOptions.aadOrApiKey.aadAuthFailureMode" options="aad-auth-failure-mode" group="AuthOptions">
          <help short="Describes what response the data plane API of a Search service would send for requests that failed authentication."/>
          <enum>
            <item name="http401WithBearerChallenge" value="&quot;http401WithBearerChallenge&quot;"/>
            <item name="http403" value="&quot;http403&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$service.properties.authOptions.apiKeyOnly" options="api-key-only" group="AuthOptions">
          <blank value="{}"/>
          <help short="Indicates that only the API key needs to be used for authentication."/>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$service.identity.type" options="identity-type" group="Identity">
          <help short="The identity type."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="NetworkRuleSet">
        <arg type="array<object>" var="$service.properties.networkRuleSet.ipRules" options="ip-rules-internal" group="NetworkRuleSet">
          <help short="A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method."/>
          <item type="object">
            <arg type="string" var="$service.properties.networkRuleSet.ipRules[].value" options="value">
              <help short="Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$service.properties.disableLocalAuth" options="disable-local-auth" group="Properties">
          <help short="When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot be set to true if 'dataPlaneAuthOptions' are defined."/>
        </arg>
        <arg type="object" var="$service.properties.encryptionWithCmk" options="encryption-with-cmk" hide="True" group="Properties">
          <help short="Specifies any policy regarding encryption of resources (such as indexes) using customer manager keys within a search service."/>
          <arg type="string" var="$service.properties.encryptionWithCmk.enforcement" options="enforcement">
            <help short="Describes how a search service should enforce having one or more non customer encrypted resources."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
              <item name="Unspecified" value="&quot;Unspecified&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$service.properties.hostingMode" options="hosting-mode" group="Properties">
          <help short="Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'."/>
          <default value="&quot;default&quot;"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
            <item name="highDensity" value="&quot;highDensity&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$service.properties.partitionCount" options="partition-count" group="Properties">
          <help short="The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3."/>
          <default value="1"/>
          <format maximum="12" minimum="1"/>
        </arg>
        <arg type="string" var="$service.properties.publicNetworkAccess" options="public-network-access public-access" group="Properties">
          <help short="This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method."/>
          <default value="&quot;enabled&quot;"/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="enabled" value="&quot;enabled&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$service.properties.replicaCount" options="replica-count" group="Properties">
          <help short="The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU."/>
          <default value="1"/>
          <format maximum="12" minimum="1"/>
        </arg>
        <arg nullable="True" type="string" var="$service.properties.semanticSearch" options="semantic-search" group="Properties">
          <help short="Sets options that control the availability of semantic search. This configuration is only possible for certain Azure Cognitive Search SKUs in certain locations."/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="free" value="&quot;free&quot;"/>
            <item name="standard" value="&quot;standard&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Service">
        <arg type="ResourceLocation" var="$service.location" options="location l" required="True" group="Service">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$service.tags" options="tags" group="Service">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg type="string" var="$service.sku.name" options="sku" required="True" group="Sku">
          <help short="The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'"/>
          <enum>
            <item name="basic" value="&quot;basic&quot;"/>
            <item name="free" value="&quot;free&quot;"/>
            <item name="standard" value="&quot;standard&quot;"/>
            <item name="standard2" value="&quot;standard2&quot;"/>
            <item name="standard3" value="&quot;standard3&quot;"/>
            <item name="storage_optimized_l1" value="&quot;storage_optimized_l1&quot;"/>
            <item name="storage_optimized_l2" value="&quot;storage_optimized_l2&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Services_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="searchServiceName" arg="$Path.searchServiceName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id">
              <param type="uuid" name="x-ms-client-request-id" arg="$Header.x-ms-client-request-id"/>
            </header>
            <body>
              <json>
                <schema type="object" name="service" required="True" clientFlatten="True">
                  <prop type="object" name="identity">
                    <prop type="string" name="type" arg="$service.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$service.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="authOptions">
                      <prop type="object" name="aadOrApiKey">
                        <prop type="string" name="aadAuthFailureMode" arg="$service.properties.authOptions.aadOrApiKey.aadAuthFailureMode">
                          <enum>
                            <item value="&quot;http401WithBearerChallenge&quot;"/>
                            <item value="&quot;http403&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="apiKeyOnly" arg="$service.properties.authOptions.apiKeyOnly"/>
                    </prop>
                    <prop nullable="True" type="boolean" name="disableLocalAuth" arg="$service.properties.disableLocalAuth"/>
                    <prop type="object" name="encryptionWithCmk" arg="$service.properties.encryptionWithCmk">
                      <prop type="string" name="enforcement" arg="$service.properties.encryptionWithCmk.enforcement">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Unspecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="hostingMode" arg="$service.properties.hostingMode">
                      <default value="&quot;default&quot;"/>
                      <enum>
                        <item value="&quot;default&quot;"/>
                        <item value="&quot;highDensity&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="array<object>" name="ipRules" arg="$service.properties.networkRuleSet.ipRules">
                        <item type="object">
                          <prop type="string" name="value" arg="$service.properties.networkRuleSet.ipRules[].value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer32" name="partitionCount" arg="$service.properties.partitionCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$service.properties.publicNetworkAccess">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="replicaCount" arg="$service.properties.replicaCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop nullable="True" type="string" name="semanticSearch" arg="$service.properties.semanticSearch">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name" arg="$service.sku.name" required="True">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                        <item value="&quot;standard2&quot;"/>
                        <item value="&quot;standard3&quot;"/>
                        <item value="&quot;storage_optimized_l1&quot;"/>
                        <item value="&quot;storage_optimized_l2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$service.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="authOptions">
                      <prop type="object" name="aadOrApiKey">
                        <prop type="string" name="aadAuthFailureMode">
                          <enum>
                            <item value="&quot;http401WithBearerChallenge&quot;"/>
                            <item value="&quot;http403&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="apiKeyOnly"/>
                    </prop>
                    <prop nullable="True" type="boolean" name="disableLocalAuth"/>
                    <prop type="object" name="encryptionWithCmk">
                      <prop readOnly="True" type="string" name="encryptionComplianceStatus">
                        <enum>
                          <item value="&quot;Compliant&quot;"/>
                          <item value="&quot;NonCompliant&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enforcement">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Unspecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="hostingMode">
                      <default value="&quot;default&quot;"/>
                      <enum>
                        <item value="&quot;default&quot;"/>
                        <item value="&quot;highDensity&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="array<object>" name="ipRules">
                        <item type="object">
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer32" name="partitionCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired">
                              <default value="&quot;None&quot;"/>
                            </prop>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="replicaCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop nullable="True" type="string" name="semanticSearch">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="sharedPrivateLinkResources">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/sharedPrivateLinkResources/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="string" name="privateLinkResourceId"/>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="requestMessage"/>
                          <prop type="string" name="resourceRegion"/>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Approved&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Rejected&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;degraded&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;error&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;running&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="statusDetails"/>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                        <item value="&quot;standard2&quot;"/>
                        <item value="&quot;standard3&quot;"/>
                        <item value="&quot;storage_optimized_l1&quot;"/>
                        <item value="&quot;storage_optimized_l2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2023-11-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="uuid" var="$Header.x-ms-client-request-id" options="x-ms-client-request-id" hide="True" group="">
          <help short="A client-generated GUID value that identifies this request. If specified, this will be included in response information as a way to track the request."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.searchServiceName" options="search-service-name name n" required="True" idPart="name">
          <help short="The name of the Azure Cognitive Search service associated with the specified resource group."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AuthOptions">
        <arg nullable="True" type="string" var="$service.properties.authOptions.aadOrApiKey.aadAuthFailureMode" options="aad-auth-failure-mode" group="AuthOptions">
          <help short="Describes what response the data plane API of a Search service would send for requests that failed authentication."/>
          <enum>
            <item name="http401WithBearerChallenge" value="&quot;http401WithBearerChallenge&quot;"/>
            <item name="http403" value="&quot;http403&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$service.properties.authOptions.apiKeyOnly" options="api-key-only" group="AuthOptions">
          <blank value="{}"/>
          <help short="Indicates that only the API key needs to be used for authentication."/>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$service.identity.type" options="identity-type" group="Identity">
          <help short="The identity type."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="NetworkRuleSet">
        <arg nullable="True" type="array<object>" var="$service.properties.networkRuleSet.ipRules" options="ip-rules-internal" group="NetworkRuleSet">
          <help short="A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$service.properties.networkRuleSet.ipRules[].value" options="value">
              <help short="Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$service.properties.disableLocalAuth" options="disable-local-auth" group="Properties">
          <help short="When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot be set to true if 'dataPlaneAuthOptions' are defined."/>
        </arg>
        <arg nullable="True" type="object" var="$service.properties.encryptionWithCmk" options="encryption-with-cmk" hide="True" group="Properties">
          <help short="Specifies any policy regarding encryption of resources (such as indexes) using customer manager keys within a search service."/>
          <arg nullable="True" type="string" var="$service.properties.encryptionWithCmk.enforcement" options="enforcement">
            <help short="Describes how a search service should enforce having one or more non customer encrypted resources."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
              <item name="Unspecified" value="&quot;Unspecified&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$service.properties.hostingMode" options="hosting-mode" hide="True" group="Properties">
          <help short="Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'."/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
            <item name="highDensity" value="&quot;highDensity&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$service.properties.partitionCount" options="partition-count" group="Properties">
          <help short="The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3."/>
          <format maximum="12" minimum="1"/>
        </arg>
        <arg nullable="True" type="string" var="$service.properties.publicNetworkAccess" options="public-network-access public-access" group="Properties">
          <help short="This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method."/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="enabled" value="&quot;enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$service.properties.replicaCount" options="replica-count" group="Properties">
          <help short="The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU."/>
          <format maximum="12" minimum="1"/>
        </arg>
        <arg nullable="True" type="string" var="$service.properties.semanticSearch" options="semantic-search" group="Properties">
          <help short="Sets options that control the availability of semantic search. This configuration is only possible for certain Azure Cognitive Search SKUs in certain locations."/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="free" value="&quot;free&quot;"/>
            <item name="standard" value="&quot;standard&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Service">
        <arg nullable="True" type="object" var="$service.tags" options="tags" group="Service">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg type="string" var="$service.sku.name" options="sku" hide="True" group="Sku">
          <help short="The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'"/>
          <enum>
            <item name="basic" value="&quot;basic&quot;"/>
            <item name="free" value="&quot;free&quot;"/>
            <item name="standard" value="&quot;standard&quot;"/>
            <item name="standard2" value="&quot;standard2&quot;"/>
            <item name="standard3" value="&quot;standard3&quot;"/>
            <item name="storage_optimized_l1" value="&quot;storage_optimized_l1&quot;"/>
            <item name="storage_optimized_l2" value="&quot;storage_optimized_l2&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Services_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="searchServiceName" arg="$Path.searchServiceName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id">
              <param type="uuid" name="x-ms-client-request-id" arg="$Header.x-ms-client-request-id"/>
            </header>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="SearchService_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="authOptions">
                      <prop type="object" name="aadOrApiKey">
                        <prop type="string" name="aadAuthFailureMode">
                          <enum>
                            <item value="&quot;http401WithBearerChallenge&quot;"/>
                            <item value="&quot;http403&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="apiKeyOnly"/>
                    </prop>
                    <prop nullable="True" type="boolean" name="disableLocalAuth"/>
                    <prop type="object" name="encryptionWithCmk">
                      <prop readOnly="True" type="string" name="encryptionComplianceStatus">
                        <enum>
                          <item value="&quot;Compliant&quot;"/>
                          <item value="&quot;NonCompliant&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enforcement">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Unspecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="hostingMode">
                      <default value="&quot;default&quot;"/>
                      <enum>
                        <item value="&quot;default&quot;"/>
                        <item value="&quot;highDensity&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="array<object>" name="ipRules">
                        <item type="object">
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer32" name="partitionCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired">
                              <default value="&quot;None&quot;"/>
                            </prop>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="replicaCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop nullable="True" type="string" name="semanticSearch">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="sharedPrivateLinkResources">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/sharedPrivateLinkResources/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="string" name="privateLinkResourceId"/>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="requestMessage"/>
                          <prop type="string" name="resourceRegion"/>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Approved&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Rejected&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;degraded&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;error&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;running&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="statusDetails"/>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                        <item value="&quot;standard2&quot;"/>
                        <item value="&quot;standard3&quot;"/>
                        <item value="&quot;storage_optimized_l1&quot;"/>
                        <item value="&quot;storage_optimized_l2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="service" required="True" clientFlatten="True">
              <prop type="object" name="identity">
                <prop type="string" name="type" arg="$service.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="authOptions">
                  <prop type="object" name="aadOrApiKey">
                    <prop type="string" name="aadAuthFailureMode" arg="$service.properties.authOptions.aadOrApiKey.aadAuthFailureMode">
                      <enum>
                        <item value="&quot;http401WithBearerChallenge&quot;"/>
                        <item value="&quot;http403&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="apiKeyOnly" arg="$service.properties.authOptions.apiKeyOnly"/>
                </prop>
                <prop nullable="True" type="boolean" name="disableLocalAuth" arg="$service.properties.disableLocalAuth"/>
                <prop type="object" name="encryptionWithCmk" arg="$service.properties.encryptionWithCmk">
                  <prop type="string" name="enforcement" arg="$service.properties.encryptionWithCmk.enforcement">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                      <item value="&quot;Unspecified&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="string" name="hostingMode" arg="$service.properties.hostingMode">
                  <default value="&quot;default&quot;"/>
                  <enum>
                    <item value="&quot;default&quot;"/>
                    <item value="&quot;highDensity&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="networkRuleSet">
                  <prop type="array<object>" name="ipRules" arg="$service.properties.networkRuleSet.ipRules">
                    <item type="object">
                      <prop type="string" name="value" arg="$service.properties.networkRuleSet.ipRules[].value"/>
                    </item>
                  </prop>
                </prop>
                <prop type="integer32" name="partitionCount" arg="$service.properties.partitionCount">
                  <default value="1"/>
                  <format maximum="12" minimum="1"/>
                </prop>
                <prop type="string" name="publicNetworkAccess" arg="$service.properties.publicNetworkAccess">
                  <default value="&quot;enabled&quot;"/>
                  <enum>
                    <item value="&quot;disabled&quot;"/>
                    <item value="&quot;enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="replicaCount" arg="$service.properties.replicaCount">
                  <default value="1"/>
                  <format maximum="12" minimum="1"/>
                </prop>
                <prop nullable="True" type="string" name="semanticSearch" arg="$service.properties.semanticSearch">
                  <enum>
                    <item value="&quot;disabled&quot;"/>
                    <item value="&quot;free&quot;"/>
                    <item value="&quot;standard&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="sku" required="True">
                <prop type="string" name="name" arg="$service.sku.name" required="True">
                  <enum>
                    <item value="&quot;basic&quot;"/>
                    <item value="&quot;free&quot;"/>
                    <item value="&quot;standard&quot;"/>
                    <item value="&quot;standard2&quot;"/>
                    <item value="&quot;standard3&quot;"/>
                    <item value="&quot;storage_optimized_l1&quot;"/>
                    <item value="&quot;storage_optimized_l2&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$service.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Services_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="searchServiceName" arg="$Path.searchServiceName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id">
              <param type="uuid" name="x-ms-client-request-id" arg="$Header.x-ms-client-request-id"/>
            </header>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@SearchService_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
